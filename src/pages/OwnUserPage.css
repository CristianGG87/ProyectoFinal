import { useContext, useState } from 'react';
import { loginUserService } from '../services';
import { AuthContext } from '../context/AuthContext';
import { useNavigate } from 'react-router-dom';
import Header from '../components/Header';
import './LoginPage.css';
export const LoginPage = () => {
    const [email, setEmail] = useState('');
    const [password, setPassword] = useState('');
    const [error, setError] = useState('');
    const { login } = useContext(AuthContext);
    const navigate = useNavigate();
    const handleForm = async (e) => {
        e.preventDefault();
        setError('');
        try {
            const data = await loginUserService({ email, password });
            login(data);
            navigate('/');
        } catch (error) {
            setError(error.message);
        }
    };
    return (
        <main>
            <Header />
            <section>
                <h1>Iniciar Sesion</h1>
                <form onSubmit={handleForm}>
                    <fieldset className="input-container">
                        <label htmlFor="email">Correo electronico: </label>
                        <input
                            type="email"
                            id="email"
                            name="email"
                            required
                            onChange={(e) => setEmail(e.target.value)}
                        />
                    </fieldset>
                    <fieldset className="input-container">
                        <label htmlFor="password">Contrase√±a: </label>
                        <input
                            type="password"
                            id="password"
                            name="password"
                            required
                            onChange={(e) => setPassword(e.target.value)}
                        />
                    </fieldset>
                    <button>Iniciar Sesion</button>
                    {error ? <p>{error}</p> : null}
                </form>
            </section>
        </main>
    );
};
13:25
button.edit {
    border: none;
    background-color: transparent;
    margin: 0;
    padding: 10px;
}
button {
    border-radius: 5px;
    background-color: #007BFF;
    color: white;
}
button:hover {
    background-color: #48494A;
    cursor: pointer;
}
h3 {
    color: white;
}
section.user-data {
    margin-top: 10px;
    width: 50%;
    margin: 0 auto;
    border-radius: 20px;
    display: flex;
    flex-direction: column;
    align-items: center;
    margin-top: 5rem;
}
.user-data {
    background-color: #1C1C1C;
    color: #FFFFFF;
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
}
.user-data h1 {
    font-size: 24px;
}
.user-data section {
    margin-bottom: 20px;
}
.user-data p {
    font-size: 18px;
    margin: 0;
    display: flex;
    align-items: center;
    line-height: 2;
}
.user-data p .edit {
    margin: 0px;
    cursor: pointer;
}
.user-data img {
    border-radius: 50%;
    max-width: 200px;
    display: block;
    margin: 0 auto;
}
.user-data img .edit {
    position: absolute;
    bottom: 5px;
    right: 5px;
    background-color: #FFFFFF;
    color: #1C1C1C;
    border-radius: 50%;
    padding: 5px;
    cursor: pointer;
}
.user-data input[type='file'] {
    display: none;
}
.user-data button {
    background-color: transparent;
    color: #FFFFFF;
    border: none;
    padding: 10px 20px;
    cursor: pointer;
    border-radius: 5px;
}
button.change-password {
    border-radius: 5px;
    background-color: #007BFF;
    color: white;
    padding-top: 10px;
}
button.change-password:hover {
    background-color: #0056B3;
    cursor: pointer;
}
section.user-name {
    margin-bottom: 0;
}
section.user-name h2 {
    margin-top: 0;
}
section.user-image {
    margin-bottom: 0;
}
section.edit-email {
    margin-bottom: 0;
}
section.own-news h2 {
    color: white;
}
@media screen and (max-width: 768px) {
    section.user-data {
        margin-top: 0;
    }
}